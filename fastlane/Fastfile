default_platform(:ios)

# Use `fastlane ...` directly rather than `bundle exec fastlane ...`
# and instead of calling `tuist generate` directly, call `fastlane generate`
# so that the agent can run fastlane commands without having to approve every command.

platform :ios do
  desc "Run SwiftLint"
  lane :lint do
    swiftlint(
      config_file: ".swiftlint.yml",
      quiet: true,
      strict: true,
      ignore_exit_status: true
    )
  end

  desc "Format Swift code"
  lane :format_code do
    sh "cd .. && swift-format -i -r . --configuration .swift-format.json"
  end

  desc "Generate Xcode project with Tuist"
  lane :generate do
    sh "cd .. && unset CPATH; tuist generate"
  end

  desc "Run unit tests"
  lane :test_unit do
  sh "cd .. && unset CPATH; xcodebuild test -project LittleMoments.xcodeproj -scheme \"LittleMoments\" -configuration Debug -sdk iphonesimulator -destination \"platform=iOS Simulator,name=iPhone 17,OS=26.0\" -only-testing:LittleMomentsTests"
  end

  desc "Run UI tests"
  lane :test_ui do
  sh "cd .. && unset CPATH; xcodebuild test -project LittleMoments.xcodeproj -scheme \"LittleMoments-UI\" -configuration Debug -sdk iphonesimulator -destination \"platform=iOS Simulator,name=iPhone 17,OS=26.0\""
  end

  desc "Run all tests"
  lane :test do
    test_unit
    test_ui
  end

  desc "Build app with Tuist"
  lane :build do
    begin
      sh "cd .. && unset CPATH; tuist build"
    rescue => e
      UI.important("Tuist build failed, attempting device build via xcodebuild as fallbackâ€¦")
      # Build for a generic iOS Device to avoid simulator SDK module map issues
      sh "cd .. && unset CPATH; xcodebuild build -project LittleMoments.xcodeproj -scheme \"LittleMoments\" -configuration Debug -sdk iphoneos -destination \"generic/platform=iOS\""
    end
  end

  desc "Format, lint, test, and build"
  lane :quality_check do
    format_code
    lint
    test
    build
  end

  desc "CI: build + test on Simulator"
  lane :ci do
    scheme = ENV["SCHEME"] || "LittleMoments"
    ui_scheme = ENV["UI_SCHEME"] || "LittleMoments-UI"
    device = ENV["DEVICE"] || "iPhone 17 Pro"

    scan(
      scheme: scheme,
      clean: true,
      device: device,
      result_bundle_path: "build/UnitTests.xcresult"
    )

    scan(
      scheme: ui_scheme,
      clean: false,
      device: device,
      result_bundle_path: "build/UITests.xcresult"
    )
  end

  desc "Generate repository overview with Repomix"
  lane :repomix do
    sh "cd .. && repomix"
  end
end
